{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Melissa\\\\Desktop\\\\code\\\\star-wars-clicky-game\\\\src\\\\App.js\";\nimport React from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport characters from \"./characters.json\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters,\n      charactersChosen: [],\n      score: 0,\n      highScore: 0,\n      wins: 0,\n      status: \"\"\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      let _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.shuffleCharacters = array => {\n      for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        var _ref = [array[j], array[i]];\n        array[i] = _ref[0];\n        array[j] = _ref[1];\n      }\n\n      return array;\n    };\n\n    this.chooseCharacter = id => {\n      console.log(\"this.state.characters is \");\n      console.log(this.state.characters);\n\n      if (!this.state.score) {\n        this.setState({\n          status: \"\"\n        });\n      } else if (this.state.score === 12) {\n        this.setState({\n          status: \"\",\n          charactersChosen: [],\n          score: 0\n        });\n      }\n\n      if (!this.state.charactersChosen.includes(id)) {\n        if (this.state.score >= 11) {\n          this.setState({\n            status: \"You won! Congratulations!\\n Refresh or click any picture to play again!\",\n            highScore: 12,\n            score: 0,\n            charactersChosen: [],\n            wins: this.state.wins + 1\n          });\n          console.log(\"You won!\");\n        } else {\n          // let shuffle = this.state.characters;\n          // shuffle = this.shuffleCharacters(shuffle);\n          this.setState({\n            charactersChosen: [...this.state.charactersChosen, id],\n            score: this.state.score + 1\n          });\n        }\n      } else {\n        let high;\n\n        if (this.state.score > this.state.highScore) {\n          high = this.state.score;\n        } else {\n          high = this.state.highScore;\n        }\n\n        console.log(\"You lose!\");\n        this.setState({\n          charactersChosen: [],\n          highScore: high,\n          score: 0,\n          status: \"You lost! Whoops. Refresh or click any picture to play again!\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Star Wars Clicky Game!\")), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" Score: \", this.state.score), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"High Score: \", this.state.highScore), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Total Wins: \", this.state.wins)), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Click each character once. If you click all 12 only once, you win!\"), React.createElement(\"div\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"h5\", {\n      className: \"text-center mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.state.status), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.characters.map(item => React.createElement(CharacterCard, {\n      name: item.name,\n      image: item.image,\n      id: item.id,\n      onChange: this.handleInputChange,\n      chooseCharacter: this.chooseCharacter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Melissa/Desktop/code/star-wars-clicky-game/src/App.js"],"names":["React","CharacterCard","Wrapper","characters","App","Component","state","charactersChosen","score","highScore","wins","status","handleInputChange","event","preventDefault","target","name","value","setState","shuffleCharacters","array","i","length","j","Math","floor","random","chooseCharacter","id","console","log","includes","high","render","map","item","image"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport characters from \"./characters.json\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    characters,\n    charactersChosen: [],\n    score: 0,\n    highScore: 0,\n    wins: 0,\n    status: \"\",\n  };\n\n  handleInputChange = event => {\n    event.preventDefault();\n    let { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n  //Shuffling algorithm taken from https://javascript.info/task/shuffle\n  shuffleCharacters = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n\n  chooseCharacter = id => {\n\n\n    console.log(\"this.state.characters is \");\n    console.log(this.state.characters);\n\n\n\n\n    if (!this.state.score) {\n      this.setState({\n        status: \"\"\n      })\n    }\n\n    else if (this.state.score === 12) {\n      this.setState({\n        status: \"\",\n        charactersChosen: [],\n        score: 0\n      })\n\n    }\n\n\n\n    if (!this.state.charactersChosen.includes(id)) {\n\n      if (this.state.score >= 11) {\n        this.setState({\n          status: \"You won! Congratulations!\\n Refresh or click any picture to play again!\",\n          highScore: 12,\n          score: 0,\n          charactersChosen: [],\n          wins: this.state.wins + 1\n        })\n        console.log(\"You won!\");\n\n      }\n      else {\n\n        // let shuffle = this.state.characters;\n        // shuffle = this.shuffleCharacters(shuffle);\n        this.setState({\n          charactersChosen: [...this.state.charactersChosen, id],\n          score: this.state.score + 1\n        })\n      }\n    }\n    else {\n      let high;\n      if (this.state.score > this.state.highScore) {\n        high = this.state.score;\n      }\n      else {\n        high = this.state.highScore;\n      }\n      console.log(\"You lose!\")\n\n      this.setState({\n        charactersChosen: [],\n        highScore: high,\n        score: 0,\n        status: \"You lost! Whoops. Refresh or click any picture to play again!\"\n      })\n    }\n\n\n  }\n\n  render() {\n    return (\n      <Wrapper>\n\n\n        <div className=\"jumbotron\">\n          <h1 className=\"title\">Star Wars Clicky Game!</h1>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row stats\">\n            <div className=\"col-6\">\n            </div>\n            <div className=\"col-2\"> Score: {this.state.score}</div>\n            <div className=\"col-2\">\n              High Score: {this.state.highScore}\n            </div>\n            <div className=\"col-2\">\n              Total Wins: {this.state.wins}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-8\">Click each character once. If you click all 12 only once, you win!</div>\n            <div className=\"col-4\"></div>\n          </div>\n          <h5 className=\"text-center mt-3\">\n            {this.state.status}\n\n          </h5>\n\n          <div className=\"row\">\n            {this.state.characters.map(item =>\n              <CharacterCard\n                name={item.name}\n                image={item.image}\n                id={item.id}\n                onChange={this.handleInputChange}\n                chooseCharacter={this.chooseCharacter}\n\n              />\n            )}\n\n          </div>\n        </div>\n\n\n\n\n\n      </Wrapper >\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}